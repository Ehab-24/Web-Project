import { useEffect, useState } from "react"
import Button from "../components/buttons/Button"
import * as api from '../api'
import * as TokensManager from '../lib/TokensManager'
import { useNavigate } from "react-router-dom"
import Spinner from "../components/spinner"
import { useAuth } from "../lib/AuthContext"
import { toast } from "react-toastify"

export default function BookingsPage() {

    const [loading, setLoading] = useState(true)    // Assume that we will definitely load on first render to avoid jitter
    const [bookings, setBookings] = useState<any[]>([])
    const navigate = useNavigate()
    const { logout } = useAuth()

    useEffect(() => {
        async function fetchBookings() {
            setLoading(true)
            let [access, _] = TokensManager.getTokenPair()
            if (!!access) {
                const result = await api.bookings(access)
                if (result === 1) { // Assume that the token has expired
                    toast.warn("Session expired!")
                    logout()
                    navigate('/login')
                } else if (result !== 0) {
                    console.log("Bookings", result)
                    setBookings(result)
                }
            } else {
                alert('unable to laod bookings')
            }
            setLoading(false)
        }
        fetchBookings()
    }, [])

    return loading ? (
        <div className="w-screen h-screen grid place-items-center">
            <Spinner />
        </div>
    ) : (
        <div className="w-full px-4 md:px-20">
            <ol className="relative border-s border-gray-200 dark:border-gray-700">

                {
                    bookings.map(b => (
                        <ListItem key={b.id} booking={b} />
                    ))
                }

                <li className="mb-10 ms-4">
                    <div className="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
                    <time className="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">March 2022</time>
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Marketing UI design in Figma</h3>
                    <p className="text-base font-normal text-gray-500 dark:text-gray-400">All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.</p>
                </li>
                <li className="ms-4">
                    <div className="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
                    <time className="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">April 2022</time>
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">E-Commerce UI code in Tailwind CSS</h3>
                    <p className="text-base font-normal text-gray-500 dark:text-gray-400">Get started with dozens of web components and interactive elements built on top of Tailwind CSS.</p>
                </li>
            </ol>
        </div>

    )
}

function ListItem({ booking }: { booking: any }) {
    return (
        <li className="mb-10 ms-4">
            <div className="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
            <time className="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">{formatDate(booking.check_in)} - {formatDate(booking.check_out)}</time>
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white">Application UI code in Tailwind CSS</h3>
            <p className="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce & Marketing pages.</p>
            <Button onClick={() => { }} className="flex items-center">
                See&nbsp;&nbsp;<b>{booking.listing.title}</b>
                <svg className="w-3 h-3 ms-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                    <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M1 5h12m0 0L9 1m4 4L9 9" />
                </svg>

            </Button>
        </li>
    )
}

function formatDate(strDate: string): string {
    const date = new Date(strDate);
    const options = { month: 'long', day: 'numeric' };
    // @ts-ignore
    return date.toLocaleDateString('en-US', options);
}
